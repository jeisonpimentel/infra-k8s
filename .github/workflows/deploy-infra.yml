name: Deploy MySQL & PostgreSQL to GKE

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 🛎 Checkout repository
        uses: actions/checkout@v3

      - name: 🔐 Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: 📦 Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: 🔄 Install GKE Auth Plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin
          echo "export USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: ⚙️ Configure kubectl
        env:
          GKE_CLUSTER: "cluster-gke-standard"
          GKE_REGION: "us-west1"
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --region=$GKE_REGION
          kubectl cluster-info

      - name: 🚀 Deploy RBAC (Roles y Permisos)
        run: |
          kubectl apply -f k8s-config/rbac/serviceaccount.yaml
          kubectl apply -f k8s-config/rbac/role.yaml
          kubectl apply -f k8s-config/rbac/role-binding.yaml
          kubectl apply -f k8s-config/rbac/sa-token.yaml

      - name: 🚀 Deploy ConfigMaps & Secrets
        run: |
          kubectl apply -f k8s-config/configmaps/ 
          kubectl apply -f k8s-config/secrets/

      - name: 🚀 Deploy Persistent Volumes & Claims
        run: |
          kubectl apply -f k8s-config/volumes/pv/
          kubectl apply -f k8s-config/volumes/pvc/

      - name: 🚀 Deploy MySQL & PostgreSQL
        run: |
          kubectl apply -f k8s-config/deployments/deployment-mysql.yaml
          kubectl apply -f k8s-config/deployments/deployment-postgres.yaml
          kubectl apply -f k8s-config/services/svc-mysql.yaml
          kubectl apply -f k8s-config/services/svc-postgres.yaml

      - name: 🚀 Verify Deployments are Running
        run: |
          kubectl rollout status deployment/mysql8 --timeout=120s -n dev
          kubectl rollout status deployment/postgres14 --timeout=120s -n dev
